variables:
  USERNS: "https://jangorecki.gitlab.io" # user namespace for local fork drat install string

stages:
  - test
  - deploy

test:
  stage: test
  services:
  - postgres
  variables:
    POSTGRES_PASSWORD: postgres
  image: docker.io/jangorecki/r-pkg
  script:
    # non-R dependencies
    - apt-get update -qq
    - apt-get -qq install -y libpq-dev
    # install deps
    - Rscript -e 'install.packages(c("R6","data.table"), repos=c("https://cran.rstudio.com","https://Rdatatable.github.io/data.table"))'
    # install suggests including cascades
    - Rscript -e 'install.packages(c("Rserve","RSclient","big.data.table","microbenchmarkCore","logR"), repos=c("http://rforge.net", paste0("https://", c("cran.rstudio.com","jangorecki.gitlab.io/big.data.table","olafmersmann.github.io/drat","jangorecki.gitlab.io/logR"))))'
    # build pkg
    - R CMD build .
    # run check
    - R CMD check $(ls -1t *.tar.gz | head -n 1) --no-manual --as-cran
    # produce artifacts
    - Rscript -e 'drat::insertArtifacts(repodir="public", repo.url="'"$USERNS"'/data.cube", repo.cran=TRUE, log.files=c("tests/tests-big.data.cube.Rout"))'
  artifacts:
    paths:
      - public

test-r-3.0.0:
  stage: test
  image: docker.io/jangorecki/r-3.0.0
  script:
    # build package
    - R3 CMD build .
    # run check
    - export _R_CHECK_CRAN_INCOMING_=FALSE
    - export _R_CHECK_FORCE_SUGGESTS_=FALSE
    - R3 CMD check $(ls -1t *.tar.gz | head -n 1) --no-manual --as-cran
    # produce artifacts
    - R3script -e 'install.packages("drat", repos="https://jangorecki.gitlab.io/drat")'
    - R3script -e 'drat::insertArtifacts(repodir="public/r-3.0.0", repo.url="'"$USERNS"'/data.cube/r-3.0.0", repo.cran=TRUE, log.files=c("tests/tests-big.data.cube.Rout"))'
  artifacts:
    paths:
      - public

pages:
  stage: deploy
  image: docker.io/alpine
  script:
    - ls -lR public
  artifacts:
    paths:
      - public
