# engine
importFrom(stats, aggregate)
import(data.table)
import(R6)

# to cube
export(as.cube)
S3method(as.cube, default)
S3method(as.cube, array)
S3method(as.cube, list)
S3method(as.cube, data.table)

# cube
export(cube)
S3method("[", cube)
S3method(dim, cube)
S3method(dimnames, cube)
S3method(str, cube)
S3method(aggregate, cube)
S3method(rollup, cube)
S3method(format, cube)
export(capply)
export(rollup)

# from cube
S3method(as.data.table, cube)
S3method(as.list, cube)
S3method(as.array, cube)

# others
S3method(as.data.table, array)
S3method(as.array, data.table)
S3method(rollup, data.table)
export(populate_star)
export(process.dim)

# measure
export(as.measure)

# level
export(as.level)
S3method(as.level, default)
S3method(as.level, data.table)

# hierarchy
export(as.hierarchy)
S3method(as.hierarchy, default)
S3method(as.hierarchy, list)

# dimension
export(as.dimension)
S3method(as.dimension, default)
S3method(as.dimension, data.table)

# fact
export(as.fact)
S3method(as.fact, default)
S3method(as.fact, data.table)
S3method(as.fact, list)

# data.cube
export(as.data.cube)
S3method(as.data.cube, default)
S3method(as.data.cube, fact)
S3method(as.data.cube, list)
S3method(as.data.cube, data.table)
S3method(as.data.cube, cube)

# from.data.cube classes `as.*.data.cube` methods
S3method(as.array, data.cube)
S3method(as.data.table, data.cube)
S3method(as.data.table, dimension)

# is.* classess
export(is.measure)
export(is.dimension)
export(is.fact)
export(is.data.cube)
export(is.cube)

# `dim.*` methods
S3method(dim, dimension)
S3method(dim, fact)
S3method(dim, data.cube)

# str, dimnames and format
S3method(str, data.cube)
S3method(dimnames, data.cube)
#S3method(format, data.cube)
